{% extends "base.html.twig" %}
{% block titre %}Paiement panier
{% endblock %}

{% block css %}

    {# bootstrap5 css #}
    
    <link rel="stylesheet" href="{{ asset('assets/css/nav.css') }}">
    <link rel="stylesheet" href="{{ asset('assets/css/bootstrap.min.css') }}">

{% endblock %}
{% block contenu %}


<h1 class="center white-text"> Test</h1>
<div class ="row ">
<div class ="col s12 m4 l4 offset-m4 offset--l4 ">
  <form method="post" action="" id="payment-form">
    <div class="form-row">
      <label for="card-element">Credit Card Payment</label>
      
    
    <div id="card-element">
    <!-- Using the same "my-input" class on the TO INSERT STRIPE ELEMENT--> 
    </div>
     
      <!-- regular input above and on this container. -->
      <div id="card-errors" role="alert"></div>
    </div>
<button>Submit payment</button>
  </form>
</div>
</div>
{% endblock %}
{% block js %}
<script>
  var stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');
  var elements = stripe.elements();
  var style = {
      base: {
        fontSize: '16px',
        lineHeight:'24px'
       
      }
  };
  var card = elements.create('card',{style:style});
  card.mount('#card-element');
  // Customize which fields are collected by the Payment Element
  var paymentElement = elements.create('payment', {
    fields: {
      billingDetails: {
        name: 'never',
        email: 'never',
      }
    }
  });
  
  // If you disable collecting fields in the Payment Element, you
  // must pass equivalent data when calling `stripe.confirmPayment`.
  
  {# evenlisitener pour detecter evenement changement  #}
  card.addEventListener('change', function(event) => {
   var displayError = document.getElementById('card-errors');
   if(event.error){
       displayError.textContent = event.error.message;
   }
   else{
      displayError.textContent='';
   }  
  
  });
  // Create a token or display an error when the form is submitted.
  var form = document.getElementById('payment-form');
  form.addEventListener('submit', function(event) {
    event.preventDefault();
  
    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the customer that there was an error.
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
      } else {
        // Send the token to your server.
        stripeTokenHandler(result.token);
      }
    });
  });
  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('payment-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);
  
    // Submit the form
    form.submit();
  }
  
  
  
  </script>

<script src="https://js.stripe.com/v3/"></script>
{% endblock %}